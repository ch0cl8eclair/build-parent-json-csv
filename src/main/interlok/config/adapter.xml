<adapter>
  <unique-id>desperate-blackwell</unique-id>
  <start-up-event-imp>com.adaptris.core.event.StandardAdapterStartUpEvent</start-up-event-imp>
  <heartbeat-event-imp>com.adaptris.core.HeartbeatEvent</heartbeat-event-imp>
  <shared-components>
    <connections>
      <cache-connection>
        <unique-id>document id cache</unique-id>
        <cache-instance class="expiring-map-cache">
          <expiration>
            <unit>HOURS</unit>
            <interval>1</interval>
          </expiration>
          <expiration-policy>ACCESSED</expiration-policy>
          <event-listener/>
        </cache-instance>
      </cache-connection>
    </connections>
    <services>
      <stop-processing-service>
        <unique-id>stop service</unique-id>
      </stop-processing-service>
    </services>
  </shared-components>
  <event-handler class="default-event-handler">
    <unique-id>DefaultEventHandler</unique-id>
    <connection class="null-connection">
      <unique-id>tiny-kowalevski</unique-id>
    </connection>
    <producer class="null-message-producer">
      <unique-id>condescending-spence</unique-id>
    </producer>
  </event-handler>
  <message-error-handler class="null-processing-exception-handler">
    <unique-id>sad-snyder</unique-id>
  </message-error-handler>
  <failed-message-retrier class="no-retries">
    <unique-id>pedantic-shannon</unique-id>
  </failed-message-retrier>
  <channel-list>
    <channel>
      <consume-connection class="mqtt-connection">
        <connection-error-handler class="null-connection-error-handler"/>
        <unique-id>furious-pike</unique-id>
        <server-uri>tcp://192.168.1.133:1883</server-uri>
        <username>sonicmq</username>
        <password>Jm0nkey123</password>
        <protocol-version>DEFAULT</protocol-version>
        <clean-session>true</clean-session>
        <connection-timeout>
          <unit>SECONDS</unit>
          <interval>30</interval>
        </connection-timeout>
        <ssl-properties/>
      </consume-connection>
      <produce-connection class="null-connection">
        <unique-id>prickly-bhaskara</unique-id>
      </produce-connection>
      <workflow-list>
        <standard-workflow>
          <consumer class="mqtt-consumer">
            <unique-id>zen-goldberg</unique-id>
            <topic>frigate/reviews</topic>
          </consumer>
          <service-collection class="service-list">
            <unique-id>cocky-clarke</unique-id>
            <services>
              <log-message-service>
                <unique-id>sad-torvalds</unique-id>
                <log-level>INFO</log-level>
              </log-message-service>
              <json-transform-service>
                <unique-id>sharp-yonath</unique-id>
                <source-json class="string-payload-data-input-parameter"/>
                <mapping-spec class="file-data-input-parameter">
                  <url>file://localhost/./config/frigate-review-jolt.json</url>
                </mapping-spec>
                <target-json class="string-payload-data-output-parameter"/>
                <metadata-filter class="remove-all-metadata-filter"/>
              </json-transform-service>
              <json-to-metadata>
                <unique-id>ecstatic-bell</unique-id>
                <metadata-prefix>document</metadata-prefix>
              </json-to-metadata>
              <check-cache>
                <unique-id>admiring-mahavira</unique-id>
                <connection class="shared-connection">
                  <lookup-name>document id cache</lookup-name>
                </connection>
                <cache-entry-evaluator>
                  <key-translator class="metadata-cache-value-translator">
                    <metadata-key>documentid</metadata-key>
                  </key-translator>
                  <value-translator class="com.adaptris.core.services.cache.CacheEntryEvaluator$NullCacheValueTranslator"/>
                </cache-entry-evaluator>
                <keys-not-found-service-id>review filter service</keys-not-found-service-id>
                <keys-found-service-id>stop service</keys-found-service-id>
              </check-cache>
              <if-then-otherwise>
                <unique-id>review filter service</unique-id>
                <condition class="metadata">
                  <operator class="equals">
                    <value>alert</value>
                  </operator>
                  <metadata-key>documentseverity</metadata-key>
                </condition>
                <then>
                  <service class="service-list">
                    <unique-id>pensive-goldstine</unique-id>
                    <services>
                      <add-single-value-to-cache>
                        <unique-id>save review event id</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>document id cache</lookup-name>
                        </connection>
                        <key>%message{documentid}</key>
                        <value-translator class="metadata-cache-value-translator">
                          <metadata-key>documentid</metadata-key>
                        </value-translator>
                      </add-single-value-to-cache>
                      <payload-from-template>
                        <unique-id>reverent-meninsky</unique-id>
                        <metadata-tokens/>
                        <template><![CDATA[Detected %message{documentobjects} in driveway]]></template>
                      </payload-from-template>
                      <apache-http-request-service>
                        <unique-id>prickly-leakey</unique-id>
                        <url>http://192.168.1.107:80/home</url>
                        <method>POST</method>
                        <request-header-provider class="apache-http-configured-request-headers">
                          <headers>
                            <key-value-pair>
                              <key>Attach</key>
                              <value>http://frigate:5000/api/driveway/any/thumbnail.jpg</value>
                            </key-value-pair>
                          </headers>
                        </request-header-provider>
                        <authenticator class="http-no-authentication"/>
                      </apache-http-request-service>
                    </services>
                  </service>
                </then>
                <otherwise>
                  <service class="stop-processing-service">
                    <unique-id>agitated-carson</unique-id>
                  </service>
                </otherwise>
              </if-then-otherwise>
            </services>
          </service-collection>
          <producer class="null-message-producer">
            <unique-id>adoring-kowalevski</unique-id>
          </producer>
          <unique-id>mqtt-rest-api-bridge-workflow</unique-id>
          <message-metrics-interceptor>
            <unique-id>mqtt-rest-api-bridge-workflow-MessageMetrics</unique-id>
            <timeslice-duration>
              <unit>MINUTES</unit>
              <interval>5</interval>
            </timeslice-duration>
            <timeslice-history-count>12</timeslice-history-count>
          </message-metrics-interceptor>
          <in-flight-workflow-interceptor>
            <unique-id>mqtt-rest-api-bridge-workflow-InFlight</unique-id>
          </in-flight-workflow-interceptor>
        </standard-workflow>
        <standard-workflow>
          <consumer class="mqtt-consumer">
            <unique-id>event-consumer</unique-id>
            <topic>frigate/events</topic>
          </consumer>
          <service-collection class="service-list">
            <unique-id>happy-noyce</unique-id>
            <services>
              <json-transform-service>
                <unique-id>event jolt</unique-id>
                <source-json class="string-payload-data-input-parameter"/>
                <mapping-spec class="file-data-input-parameter">
                  <url>file://localhost/./config/frigate-event-jolt.json</url>
                </mapping-spec>
                <target-json class="string-payload-data-output-parameter"/>
                <metadata-filter class="remove-all-metadata-filter"/>
              </json-transform-service>
              <json-to-metadata>
                <unique-id>ecstatic-bell</unique-id>
                <metadata-prefix>document</metadata-prefix>
              </json-to-metadata>
              <if-then-otherwise>
                <unique-id>hopeful-fermi</unique-id>
                <condition class="and">
                  <metadata>
                    <operator class="equals">
                      <value>new</value>
                    </operator>
                    <metadata-key>documenttype</metadata-key>
                  </metadata>
                  <metadata>
                    <operator class="equals">
                      <value>driveway</value>
                    </operator>
                    <metadata-key>documentcamera</metadata-key>
                  </metadata>
                </condition>
                <then>
                  <service class="log-message-service">
                    <unique-id>small-albattani</unique-id>
                    <log-level>INFO</log-level>
                  </service>
                </then>
                <otherwise>
                  <service class="stop-processing-service">
                    <unique-id>gloomy-fermi</unique-id>
                  </service>
                </otherwise>
              </if-then-otherwise>
            </services>
          </service-collection>
          <producer class="null-message-producer">
            <unique-id>jolly-blackwell</unique-id>
          </producer>
          <unique-id>Mqtt events logging</unique-id>
          <message-metrics-interceptor>
            <unique-id>Mqtt events logging-MessageMetrics</unique-id>
            <timeslice-duration>
              <unit>MINUTES</unit>
              <interval>5</interval>
            </timeslice-duration>
            <timeslice-history-count>12</timeslice-history-count>
          </message-metrics-interceptor>
          <in-flight-workflow-interceptor>
            <unique-id>Mqtt events logging-InFlight</unique-id>
          </in-flight-workflow-interceptor>
        </standard-workflow>
      </workflow-list>
      <unique-id>mqtt-channel</unique-id>
    </channel>
  </channel-list>
  <message-error-digester class="standard-message-error-digester">
    <unique-id>ErrorDigest</unique-id>
    <digest-max-size>100</digest-max-size>
  </message-error-digester>
</adapter>